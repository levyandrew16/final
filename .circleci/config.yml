version: 2.1

orbs:
  #terraform orb
  terraform: circleci/terraform@3.0.0
  aws-ecr: circleci/aws-ecr@7.3.0
  aws-ecs: circleci/aws-ecs@1.3.0

### this is where i found this resource
#https://circleci.com/developer/orbs/orb/circleci/terraform
jobs:
  single-job-lifecycle:
    executor: terraform/default
    steps:
      - checkout
      - run:
          command: >-
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
          name: Create .terraformrc file locally
      - terraform/install:
          arch: amd64
          os: linux
          terraform_version: 0.14.2
      - terraform/fmt:
          path: .
      - terraform/validate:
          path: .
      - terraform/init:
          backend: true
          backend_config_file: backend.hcl
          path: .
      - terraform/plan:
          backend_config_file: backend.hcl
          path: .
      - terraform/apply:
          backend_config_file: backend.hcl
          path: .
      - terraform/destroy:
          path: .
    working_directory: ~/src
workflows:
  single-job-lifecycle:
    jobs:
      - single-job-lifecycle

#######################################################
jobs:
  build_test_backend:
    docker:
      - image: circleci/python:3.7.4
    steps:
      - checkout
      - run:
          name: Install Python dependencies
          command: |
            cd backend/
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV && source $BASH_ENV
            pip install --user -r requirements.txt
      - run:
          name: Run unit tests
          command: |
            pytest --junitxml=test-reports/junit.xml --html=test-reports/pytest_report.html --self-contained-html
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
           
  build_test_frontend:
      docker:
        - image: nginx
      steps:
        - checkout
        - run:
            name: copying file
            command: |
              cd frontend/
              cp -r . /usr/share/nginx/html

  deploy_ecr_backend:
      machine: 
        image: ubuntu-2004:202010-01
      steps:
        - aws-ecr/build-and-push-image:
            create-repo: true
            repo: backend 
            path: /home/circleci/final/backend/
            tag: 'latest-${CIRCLE_BUILD_NUM}'

  deploy_ecr_frontend:
      machine: 
        image: ubuntu-2004:202010-01
      steps:
        - aws-ecr/build-and-push-image:
            create-repo: true
            repo: frontend
            path: /home/circleci/final/frontend/
            tag: 'latest-${CIRCLE_BUILD_NUM}'

workflows:
  version: 2
  build_test_deploy_frontend:
    jobs:
      - build_test_frontend
      - deploy_ecr_frontend:
         requires:
            - build_test_frontend
      
  build_test_deploy_backend:
    jobs:
      - build_test_backend
      - deploy_ecr_backend:
         requires:
            - build_test_backend