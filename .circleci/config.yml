version: '2.1'
orbs:
  aws-ecr: circleci/aws-ecr@0.0.4
  slack: circleci/slack@4.1

workflows:
  build_test_deploy:
    jobs:
      - build_test
      - build_and_deploy:
          requires:
            - build_test  

  send-notification:
    jobs:
      - notify:
          context: ei-circleci-alerts

jobs:
  build_test:
    docker:
      - image: circleci/python:3.7.4
    steps:
      - checkout
      - run:
          name: Install Python dependencies
          command: |
            cd microservices/nginx/frontend/backend/
            echo 'export PATH=~$PATH:~/.local/bin' >> $BASH_ENV && source $BASH_ENV
            pip install --user -r requirements.txt
      - run:
          name: Run unit tests
          command: |
            pytest --junitxml=test-reports/junit.xml --html=test-reports/pytest_report.html --self-contained-html
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  build_and_deploy:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies for AWS
          command: |
            sudo apt-get update -y
            sudo apt-get -y -qq install awscli
            sudo apt-get install python3-pip
            sudo pip3 install --upgrade awscli
      - run:
          name: Build image
          command: |
            docker build -t $IMAGE_NAME /microservices/nginx .
      - run:
          name: Push image
          command: |
            eval $(aws ecr get-login --region $AWS_REGION --no-include-email)
            docker push $IMAGE_NAME
            region: ${AWS_REGION}
        

  notify:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "plain_text",
                      "text": "*This is a text notification*",
                      "emoji": true
                    }
                  ]
                }
              ]
            }
          event: always
